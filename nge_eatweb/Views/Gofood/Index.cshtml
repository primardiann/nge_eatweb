@model nge_eatweb.Models.ViewModels.GofoodTransaksiPageViewModel

@{
    ViewData["Title"] = "Transaksi GoFood";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="flex min-h-screen bg-[#FAFAFA] text-sm">
    <main class="flex-1 px-8 py-6">

        <!-- Breadcrumb -->
        <div class="text-gray-500 mb-4 flex items-center space-x-1">
            <a href="/dashboard" class="text-black font-semibold hover:underline">Dashboard</a>
            <span class="text-[#888]">></span>
            <span class="text-[#888]">Transaksi GoFood</span>
        </div>

        <!-- Header dan Filter -->
        <div class="flex justify-between items-center mb-6">
            <button class="flex items-center gap-2 px-3 py-1 text-white font-medium rounded-lg"
                    style="background-color: #F58220;" onclick="openTambahModal()">
                <span class="text-lg">+</span>
                <span>Tambah Transaksi</span>
            </button>

            <form method="get" class="flex items-center gap-2">
                <input type="date" name="filterDate" value="@Model.FilterDate?.ToString("yyyy-MM-dd")" class="px-3 py-1 border rounded" />
                <button type="submit" class="px-4 py-1 bg-[#F58220] text-white rounded">Filter</button>
            </form>


        </div>

        <!-- Tabel Transaksi -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <table class="min-w-full table-auto">
                <thead class="bg-[#ffd5ab] text-gray-700 text-center text-sm font-semibold select-none">
                    <tr>
                        <th class="px-6 py-3">ID Pesanan</th>
                        <th class="px-6 py-3">Tanggal</th>
                        <th class="px-6 py-3">Kategori</th>
                        <th class="px-6 py-3">Nama Pelanggan</th>
                        <th class="px-6 py-3 max-w-[150px]">Item</th>
                        <th class="px-6 py-3">Aksi</th>
                    </tr>
                </thead>
                <tbody class="text-center text-sm text-gray-700">
                    @if (Model.TransaksiList.Any())
                    {
                        foreach (var t in Model.TransaksiList)
                        {
                            <tr class="border-t hover:bg-gray-50">
                                <td class="px-6 py-3">@t.IdPesanan</td>
                                <td class="px-6 py-3">@t.TanggalTransaksi.ToString("yyyy-MM-dd")</td>
                                <td class="px-6 py-3">
                                    <ul>
                                        @foreach (var kategori in t.Items.Select(i => i.Kategori).Distinct())
                                        {
                                            <li>@kategori</li>
                                        }
                                    </ul>
                                </td>
                                <td class="px-6 py-3">@t.NamaPelanggan</td>
                                <td class="px-6 py-3 max-w-[150px] break-words">
                                    <ul>
                                        @foreach (var item in t.Items)
                                        {
                                            <li>@item.NamaItem</li>
                                        }
                                    </ul>
                                </td>
                                <td class="px-6 py-3">
                                    <div class="flex justify-center space-x-4">
                                        <!-- Tombol Edit -->
                                        <button class="text-blue-600 hover:text-blue-800" title="Edit"
                                                onclick="openEditModal('@t.IdPesanan')">
                                            <i class="fas fa-pen-to-square text-lg"></i>
                                        </button>

                                        <!-- Tombol Hapus -->
                                        <form asp-action="Delete" method="post" onsubmit="return confirm('Yakin ingin menghapus transaksi ini?');">
                                            <input type="hidden" name="idPesanan" value="@t.IdPesanan" />
                                            <button type="submit" class="text-red-600 hover:text-red-800" title="Hapus">
                                                <i class="fas fa-trash-alt text-lg"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="py-6 text-center text-gray-500">Belum ada transaksi.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="mt-6 flex justify-center space-x-1">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    var url = $"?page={i}";
                    if (Model.FilterDate.HasValue)
                    {
                        url += $"&filterDate={Model.FilterDate:yyyy-MM-dd}";
                    }

                    <a href="@url"
                       class="px-3 py-1 border rounded
                      @(i == Model.CurrentPage ? "bg-[#F58220] text-white" : "bg-white text-gray-700 hover:bg-gray-100")">
                        @i
                    </a>
                }
            </div>
        }

    </main>
</div>

<!-- Modal Tambah Transaksi -->
<div id="transactionTambahModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="relative bg-white rounded-md shadow-md p-6 w-full max-w-3xl max-h-[90vh] overflow-auto">
        <button type="button" onclick="closeTambahModal()"
                class="absolute top-3 right-3 text-gray-500 hover:text-gray-800 text-2xl font-bold">
            &times;
        </button>
        <h2 class="text-xl font-semibold mb-4 border-b pb-2" style="border-color: #F58220;">Tambah Transaksi</h2>

        @await Html.PartialAsync("_GofoodTransaksiFormPartial", Model.FormModel)
    </div>
</div>

<!-- Modal Edit Transaksi -->
<div id="transactionEditModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="relative bg-white rounded-md shadow-md p-6 w-full max-w-3xl max-h-[90vh] overflow-auto">
        <button type="button" onclick="closeEditModal()"
                class="absolute top-3 right-3 text-gray-500 hover:text-gray-800 text-2xl font-bold">
            &times;
        </button>
        <h2 class="text-xl font-semibold mb-4 border-b pb-2" style="border-color: #F58220;">Edit Transaksi</h2>

        <div id="editModalContent">
            <p>Loading...</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openTambahModal() {
            const modal = document.getElementById('transactionTambahModal');
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        function closeTambahModal() {
            const modal = document.getElementById('transactionTambahModal');
            modal.classList.remove('flex');
            modal.classList.add('hidden');
        }

        function openEditModal(idPesanan) {
            const modal = document.getElementById('transactionEditModal');
            const content = document.getElementById('editModalContent');

            modal.classList.remove('hidden');
            modal.classList.add('flex');

            content.innerHTML = "<p>Loading...</p>";

            fetch(`/Gofood/Edit?idPesanan=${idPesanan}`)
                .then(response => {
                    if (!response.ok) throw new Error('Network response was not ok');
                    return response.text();
                })
                .then(html => {
                    content.innerHTML = html;
                })
                .catch(err => {
                    content.innerHTML = "<p class='text-red-600'>Gagal memuat form edit.</p>";
                    console.error(err);
                });
        }

        function closeEditModal() {
            const modal = document.getElementById('transactionEditModal');
            modal.classList.remove('flex');
            modal.classList.add('hidden');
        }
    </script>
}
